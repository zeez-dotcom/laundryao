version: "3.9"
services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-flutterpos}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  api:
    build:
      context: .
      target: runtime
    image: flutterpos-api:prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-5000}
      - HOST=${HOST:-0.0.0.0}
      - SESSION_SECRET=${SESSION_SECRET}
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-flutterpos}
      # Optional notifications
      # - ENABLE_EMAIL_NOTIFICATIONS=true
      # - SMTP_HOST=smtp.example.com
      # - SMTP_PORT=587
      # - SMTP_SECURE=false
      # - SMTP_USER=
      # - SMTP_PASS=
      # - SMTP_FROM=notifications@example.com
      # - ENABLE_SMS_NOTIFICATIONS=false
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
