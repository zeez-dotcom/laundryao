version: "3.9"
services:
  db:
    image: postgres:16
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: flutterpos
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.8
    restart: unless-stopped
    command:
      - redpanda
      - start
      - --smp
      - "1"
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --kafka-addr
      - 0.0.0.0:9092
      - --advertise-kafka-addr
      - redpanda:9092
      - --rpc-addr
      - 0.0.0.0:33145
      - --advertise-rpc-addr
      - redpanda:33145
    ports:
      - "9092:9092"
      - "9644:9644"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9644/v1/status/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20

  warehouse-db:
    image: postgres:16
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: warehouse
      POSTGRES_PASSWORD: warehouse
      POSTGRES_DB: laundry_warehouse
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "warehouse"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - warehouse-data:/var/lib/postgresql/data

  api:
    build:
      context: .
      target: dev
    image: flutterpos-api:dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=5000
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=1
      - DATABASE_URL=postgres://postgres:postgres@db:5432/flutterpos
      - EVENT_BUS_DRIVER=kafka
      - EVENT_BUS_KAFKA_TOPIC=analytics.events
      - KAFKA_BROKERS=redpanda:9092
      - EVENT_SINK_BATCH_SIZE=50
      - EVENT_SINK_FLUSH_INTERVAL_MS=5000
      - WAREHOUSE_DATABASE_URL=postgres://warehouse:warehouse@warehouse-db:5432/laundry_warehouse
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redpanda:
        condition: service_started
      warehouse-db:
        condition: service_healthy
    volumes:
      - .:/app
      - api_node_modules:/app/node_modules

volumes:
  pgdata:
  api_node_modules:
  warehouse-data:

